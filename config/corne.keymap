/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T       &kp Y      &kp U  &kp I         &kp O    &kp P     &kp ENTER
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G       &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B       &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LGUI  &mo 1  &kp BSPC    &kp SPACE  &mo 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3   &kp N4      &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &none   &none   &kp ESC  &kp DELETE  &none     &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none   &trans
&trans  &none   &none   &none    &none       &none     &none     &none     &none   &none      &none   &trans
                        &trans   &trans      &trans    &trans    &mo 3     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH              &kp DLLR               &kp PRCNT    &kp CARET  &kp AMPS          &kp ASTERISK       &kp MINUS  &kp EQUAL      &trans
&trans  &none     &none   &kp LEFT_BRACE        &kp RIGHT_BRACE        &none        &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none      &kp BACKSLASH  &trans
&trans  &none     &none   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none        &none      &kp UNDERSCORE    &kp PLUS           &kp TILDE  &kp GRAVE      &trans
                          &trans                &mo 3                  &trans       &trans     &trans            &trans
            >;
        };

        function_layer {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none   &none   &none   &none   &none   &none     &mo 4   &none   &none   &none    &none    &trans
&trans  &none   &none   &none   &none   &none     &none   &none   &none   &none    &none    &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        media_and_bluetooth {
            bindings = <
&none       &none           &none         &none              &none            &none               &none   &none   &none   &none  &none  &none
&none       &kp C_PREVIOUS  &kp C_NEXT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE    &none   &none   &none   &none  &none  &trans
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2       &none            &none               &none   &none   &none   &none  &none  &trans
                                          &trans             &trans           &trans              &trans  &trans  &trans
            >;
        };
    };
};
